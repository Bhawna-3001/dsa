#buy and sell stock-II dp(36)
class Solution {
    public int maxProfit(int[] prices) {
        int n=prices.length;
        long dp[][]=new long[n+1][2];
        for(long row[]:dp){
            Arrays.fill(row,-1);
        }
        long profit=0;
        dp[n][0]=dp[n][1]=0;
        for(int i=n-1;i>=0;i--){
            for(int buy=0;buy<=1;buy++){
                if(buy==0){
                    profit=Math.max(0+dp[i+1][0],-prices[i]+dp[i+1][1]);
                }if(buy==1){
                    profit=Math.max(0+dp[i+1][1],prices[i]+dp[i+1][0]);
                }
                dp[i][buy]=profit;
            }
            
        }
        return (int)dp[0][0];
    }
}
time: O(2n)
space: O(2n)
____________________________________________
